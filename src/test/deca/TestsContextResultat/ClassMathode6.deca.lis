DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:46) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:34) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:38) - verify listClass: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:45) - verify listClassMembers: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:49) - verify listClassMembers: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:56) - verify listClassBody: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:60) - verify listClassBody: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:35) - verify Main: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:39) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:58) - verify program: end
`> [1, 0] Program
   +> ListDeclClass [List with 1 elements]
   |  []> [1, 6] DeclClass
   |      +> [1, 6] Identifier (A)
   |      |  definition: type defined at [1, 6], type=A
   |      +> [1, 16] Identifier (Object)
   |      |  definition: type (builtin), type=Object
   |      +> ListDeclField [List with 0 elements]
   |      `> ListDeclMethod [List with 0 elements]
   `> [4, 0] Main
      +> ListDeclVar [List with 2 elements]
      |  []> [5, 6] DeclVar
      |  ||  +> [5, 6] Identifier (A)
      |  ||  |  definition: type defined at [1, 6], type=A
      |  ||  +> [5, 6] Identifier (a)
      |  ||  |  definition: variable defined at [5, 6], type=A
      |  ||  `> Initialization
      |  ||     `> [5, 8] New
      |  ||        `> [5, 12] Identifier (A)
      |  ||           definition: type defined at [1, 6], type=A
      |  []> [6, 11] DeclVar
      |      +> [6, 11] Identifier (Object)
      |      |  definition: type (builtin), type=Object
      |      +> [6, 11] Identifier (b)
      |      |  definition: variable defined at [6, 11], type=Object
      |      `> Initialization
      |         `> [6, 13] New
      |            `> [6, 17] Identifier (Object)
      |               definition: type (builtin), type=Object
      `> ListInst [List with 0 elements]
