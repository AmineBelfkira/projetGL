DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:46) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:34) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:38) - verify listClass: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:45) - verify listClassMembers: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:49) - verify listClassMembers: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:56) - verify listClassBody: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:60) - verify listClassBody: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:35) - verify Main: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:39) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:58) - verify program: end
`> [10, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [10, 0] Main
      +> ListDeclVar [List with 0 elements]
      `> ListInst [List with 1 elements]
         []> [11, 4] IfThenElse
             +> [11, 7] BooleanLiteral (true)
             |  type: boolean
             +> ListInst [List with 1 elements]
             |  []> [12, 8] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [12, 16] StringLiteral ("Hello")
             |             type: String
             []> [13, 14] IfThenElse
             ||  +> [13, 14] Not
             ||  |  type: boolean
             ||  |  `> [13, 15] BooleanLiteral (true)
             ||  |     type: boolean
             ||  +> ListInst [List with 1 elements]
             ||  |  []> [14, 8] Println
             ||  |      `> ListExpr [List with 1 elements]
             ||  |         []> [14, 16] StringLiteral ("world!")
             ||  |             type: String
             ||  []> [15, 14] IfThenElse
             ||  ||  +> [15, 14] BooleanLiteral (false)
             ||  ||  |  type: boolean
             ||  ||  +> ListInst [List with 1 elements]
             ||  ||  |  []> [16, 8] Println
             ||  ||  |      `> ListExpr [List with 1 elements]
             ||  ||  |         []> [16, 16] StringLiteral ("Hello again")
             ||  ||  |             type: String
